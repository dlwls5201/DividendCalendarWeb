{"version":3,"sources":["static/images/icon_app.png","routes/Auth.js","DWFirebase.js","constant/OrderBy.js","components/UserAnalysis.js","static/images/icon_user_gray.svg","components/UserItem.js","routes/UserHistory.js","constant/HistoryType.js","components/HistoryItem.js","components/StockItem.js","components/StockAnalysisWithUser.js","routes/UserDetailHistory.js","components/RankingItem.js","constant/CheckAdmin.js","routes/StockRanking.js","components/Router.js","components/App.js","index.js"],"names":["Auth","userObj","provider","GoogleAuthProvider","auth","getAuth","className","style","height","display","alignItems","justifyContent","flexDirection","src","photoURL","width","email","name","onClick","signOut","then","console","log","catch","error","icon","faGoogle","iconApp","signInWithPopup","result","credentialFromResult","credentialFromError","firestore","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getFirestore","OrderBy","ASC","DESC","UserAnalysis","userList","condition2021OctoberStart","Date","getTime","condition2021NovemberStart","condition2021DecemberStart","condition2022JanuaryStart","length","filter","user","created_at","UserItem","index","history","useHistory","useState","profile","setProfile","dateTimeFormat","Intl","DateTimeFormat","year","month","day","useEffect","profile_url","iconUser","textAlign","cursor","push","pathname","state","format","UserHistory","setUserList","createdAtOrder","setCreatedAtOrder","a","usersRef","collection","usersQuery","query","orderBy","getDocs","usersSnapshot","users","docs","map","doc","id","data","setUserListOrderByCreatedAtDESC","sortingUserList","sort","b","setUserListOrderByCreatedAtASC","background","HistoryType","HistoryTypeList","value","HistoryTypeMap","Map","forEach","set","getMap","HistoryItem","hour","minute","type","getColor","get","ticker","count","goal","StockItem","stock","logoUrl","companyName","symbol","StockAnalysisWithUser","userId","stockList","setStockList","stocksRef","stocksQuery","where","stocksSnapshot","stocks","UserDetailHistory","location","useLocation","historyList","setHistoryList","setUserId","userName","setUserName","isShowError","setIsShowError","stateUserid","uid","stateUserName","historyRef","historyQuery","historySnapshot","histories","setHistoryListOrderByCreatedAtDESC","sortingHistoryList","backgroundColor","onChange","event","trs","document","getElementById","getElementsByTagName","i","tdType","textContent","innerText","indexOf","filterHistoryByType","target","selected","RankingItem","ranking","userNumber","checkAdmin","StockRanking","rankingList","setRankingList","countOrder","setCountOrder","userNumberOrder","setUserNumberOrder","focusOrder","setFocusOrder","isCachingData","setIsCachingData","currentTime","now","localStocks","localStorage","getItem","localCacheTime","JSON","parse","list","processingData","loadRanking","r","setItem","stringify","tempMap","item","parseFloat","tempList","key","AppRouter","isAdmin","exact","path","render","App","init","setInit","setIsAdmin","setUserObj","onAuthStateChanged","checkAdminUser","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.3afc0b48.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon_app.63b0a04b.png\";","import { getAuth, GoogleAuthProvider, signInWithPopup, signOut } from 'firebase/auth'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons'\nimport iconApp from 'static/images/icon_app.png'\nimport React from 'react'\n\nconst Auth = ({userObj}) => {\n  const provider = new GoogleAuthProvider()\n  const auth = getAuth()\n\n  const onLoginGoogle = () => {\n    signInWithPopup(auth, provider)\n      .then((result) => {\n        GoogleAuthProvider.credentialFromResult(result)\n      }).catch((error) => {\n      GoogleAuthProvider.credentialFromError(error)\n    })\n  }\n\n  const onLogoutGoogle = () => {\n    const auth = getAuth()\n    signOut(auth).then(() => {\n      console.log('logout success')\n    }).catch((error) => {\n      console.log(error)\n    })\n  }\n\n  return (\n    <div\n      className={ 'bg-blue-200' }\n      style={\n        {\n          height: '100vh',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          flexDirection: 'column'\n        }\n      }>\n      <p\n        className={ 'mt-10 text-2xl font-bold' }\n      >\n        Dividend Calendar Admin\n      </p>\n\n      { userObj\n        ?\n        <div\n          style={ {display: 'flex', alignItems: 'center', flexDirection: 'column'} }\n        >\n          <img\n            className={ 'mt-4 rounded-full' }\n            src={ userObj.photoURL } width='150px' height='150px'\n          />\n          <h1\n            className={ 'mt-4 text-xl' }\n          >\n            { userObj.email }\n          </h1>\n          <h1\n            className={ 'mt-2 text-base text-red-600' }\n          >\n            인증되지 않은 회원입니다.\n          </h1>\n          <button\n            className=\"hover:bg-red-800 bg-red-200 w-96 h-10 mt-20 text-black rounded-full text-xs border-2 border-black\"\n            name=\"google\"\n            onClick={ onLogoutGoogle }\n          >\n            Google Logout <FontAwesomeIcon icon={ faGoogle } />\n          </button>\n        </div>\n        :\n        <div\n          style={ {display: 'flex', alignItems: 'center', flexDirection: 'column'} }\n        >\n          <img\n            className={ 'mt-4 rounded-full' }\n            src={ iconApp } width='150px' height='150px'\n          />\n          <h1\n            className={ 'mt-4 text-xl' }\n          >\n            구글 로그인 인증\n          </h1>\n          <h1\n            className={ 'mt-2 text-base text-gray-600' }\n          >\n            인증된 회원만 사용 가능합니다.\n          </h1>\n          <button\n            className=\"hover:bg-gray-200 bg-white w-96 h-10 mt-20 text-black rounded-full text-xs border-2 border-black\"\n            name=\"google\"\n            onClick={ onLoginGoogle }\n          >\n            Google Login <FontAwesomeIcon icon={ faGoogle } />\n          </button>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Auth","import { initializeApp } from 'firebase/app'\nimport { getFirestore } from \"firebase/firestore\"\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n}\n\nconst firebase = initializeApp(firebaseConfig)\n\nexport const firebaseInstance = firebase\nexport const firestore = getFirestore()\n\n","const OrderBy = {\n  ASC : '오름차순',\n  DESC : '내림차순'\n}\n\nexport default OrderBy\n","const UserAnalysis = ({userList}) => {\n\n  //2021\n  const condition2021OctoberStart = new Date('2021.10.01').getTime()\n  const condition2021NovemberStart = new Date('2021.11.01').getTime()\n  const condition2021DecemberStart = new Date('2021.12.01').getTime()\n\n  //2022\n  const condition2022JanuaryStart = new Date('2022.01.01').getTime()\n\n  const get2021DecemberSignInUser = () => {\n    return userList.filter(user => {\n      return user.created_at >= condition2021DecemberStart && user.created_at < condition2022JanuaryStart\n    }).length\n  }\n\n  const get2021NovemberSignInUser = () => {\n    return userList.filter(user => {\n      return user.created_at >= condition2021NovemberStart && user.created_at < condition2021DecemberStart\n    }).length\n  }\n\n  const get2021OctoberSignInUser = () => {\n    return userList.filter(user => {\n      return user.created_at >= condition2021OctoberStart && user.created_at < condition2021NovemberStart\n    }).length\n  }\n\n  return (\n    <div\n      className={ 'py-2 mt-2 bg-gray-200' }\n      style={ {display: 'flex', flexDirection: 'column'} }\n    >\n      <p className={ 'font-bold' }>UserAnalysis</p>\n\n      <p className={ 'mt-4' }>{ '총 가입 유저 수 : ' + userList.length }</p>\n\n      <p className={ 'mt-4 font-bold' }> 2021 월별 시기 </p>\n\n      <p className={ 'mt-1' }>{ '10월 : ' + get2021OctoberSignInUser() } </p>\n      <p className={ 'mt-1' }>{ '11월 : ' + get2021NovemberSignInUser() } </p>\n      <p className={ 'mt-1' }>{ '12월 : ' + get2021DecemberSignInUser() } </p>\n    </div>\n  )\n}\n\nexport default UserAnalysis","export default __webpack_public_path__ + \"static/media/icon_user_gray.10b519b5.svg\";","import { useEffect, useState } from 'react'\nimport iconUser from 'static/images/icon_user_gray.svg'\nimport { useHistory } from 'react-router-dom'\n\nconst UserItem = ({index, user}) => {\n  const history = useHistory()\n\n  const [profile, setProfile] = useState()\n\n  const dateTimeFormat = new Intl.DateTimeFormat('ko-KR', {year: 'numeric', month: '2-digit', day: '2-digit'})\n\n  useEffect(() => {\n    if (user.profile_url) {\n      setProfile(user.profile_url)\n    } else {\n      setProfile(iconUser)\n    }\n  }, [])\n\n  const goToUserHistory = () => {\n    history.push({pathname: '/user/detail', state: user})\n  }\n\n  return (\n    <tr>\n      <td\n        className={ 'bg-gray-200' }\n        style={ {textAlign: 'center'} }\n      >\n        { index }\n      </td>\n      <td\n        style={ {textAlign: 'center', cursor: 'pointer'} }\n        onClick={ goToUserHistory }\n      >\n        <img src={ profile } width=\"50px\" height=\"50px\" />\n      </td>\n      <td>{ user.name }</td>\n      <td>{ user.email }</td>\n      <td\n        style={ {textAlign: 'center'} }\n      >{ dateTimeFormat.format(user.created_at) }</td>\n    </tr>\n  )\n}\n\nexport default UserItem","import React, { useEffect, useState } from 'react'\nimport { collection, getDocs, orderBy, query } from 'firebase/firestore'\nimport { firestore } from 'DWFirebase'\nimport OrderBy from 'constant/OrderBy'\nimport { useHistory } from 'react-router-dom'\nimport UserAnalysis from 'components/UserAnalysis'\nimport UserItem from 'components/UserItem'\n\nconst UserHistory = () => {\n  const history = useHistory()\n\n  const [userList, setUserList] = useState([])\n  const [createdAtOrder, setCreatedAtOrder] = useState(OrderBy.DESC)\n\n  useEffect(async () => {\n    const usersRef = collection(firestore, 'users')\n    const usersQuery = query(usersRef, orderBy('created_at', 'desc'))\n    const usersSnapshot = await getDocs(usersQuery)\n\n    //const usersSnapshot = await getDocs(collection(firestore, 'users'))\n    const users = usersSnapshot.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data()\n    }))\n    setUserList(users)\n  }, [])\n\n  const onClickChangeCreatedAt = () => {\n    if (createdAtOrder === OrderBy.ASC) {\n      setUserListOrderByCreatedAtDESC()\n    } else {\n      setUserListOrderByCreatedAtASC()\n    }\n  }\n\n  const setUserListOrderByCreatedAtDESC = () => {\n    setCreatedAtOrder(OrderBy.DESC)\n    const sortingUserList = userList.sort(function (a, b) {\n      return b.created_at - a.created_at\n    })\n    setUserList(sortingUserList)\n  }\n\n  const setUserListOrderByCreatedAtASC = () => {\n    setCreatedAtOrder(OrderBy.ASC)\n    const sortingUserList = userList.sort(function (a, b) {\n      return a.created_at - b.created_at\n    })\n    setUserList(sortingUserList)\n  }\n\n  const goToStockRanking = () => {\n    history.push('/stock/ranking')\n  }\n\n  return (\n    <div\n      style={ {background: 'rgb(255,255,255)'} }\n      className={ 'px-5 py-5 w-full h-full text-lg' }\n    >\n      <div className={ 'text-3xl' }>Dividend Calendar History</div>\n\n      <div\n        className={ 'hover:bg-gray-200 mt-8 px-4 py-2 rounded-lg border-solid border-2 border-black' }\n        style={ {display: 'inline-block', cursor: 'pointer'} }\n        onClick={ goToStockRanking }\n      >\n        Stock Ranking 👑\n      </div>\n\n      <UserAnalysis userList={ userList } />\n\n      <h1 className={ 'mt-4 text-gray-600' }>Profile 탭을 누르면 User 상세로 이동합니다.</h1>\n\n      <table\n        className={ 'table-fixed w-full border-collapse border border-black mt-2' }\n      >\n        <thead>\n        <tr className=\"bg-blue-200\">\n          <th style={ {width: 50} }>No</th>\n          <th>Profile</th>\n          <th>Name</th>\n          <th>Email</th>\n          <th\n            style={ {cursor: 'pointer'} }\n            onClick={ onClickChangeCreatedAt }\n          >\n            { 'CreatedAt ' + ((createdAtOrder === OrderBy.ASC) ? '↓' : '↑') }\n          </th>\n        </tr>\n        </thead>\n\n        <tbody>\n        { userList.map((user, index) => <UserItem index={ index } user={ user } />) }\n        </tbody>\n      </table>\n\n      {/*<select\n       style={ {backgroundColor: 'transparent'} }\n       className={ 'mt-10' }\n       onChange={ onSelectUser }\n       >\n       <option value=\"\" selected=\"selected\">User</option>\n       { userList.map((user) => <option value={ user.uid }>{ user.name }</option>) }\n       </select>*/ }\n\n    </div>\n  )\n}\n\nexport default UserHistory","export const HistoryType = {\n  DIVIDEND_GOAL: 'DIVIDEND_GOAL',\n\n  STOCK_SYNC: 'STOCK_SYNC',\n  STOCK_ADD: 'STOCK_ADD',\n  STOCK_MODIFY: 'STOCK_MODIFY',\n  STOCK_DELETE: 'STOCK_DELETE',\n\n  QUOTE_SEE: 'QUOTE_SEE',\n  GUIDE_SEE: 'GUIDE_SEE',\n  NOTICE_SEE: 'NOTICE_SEE',\n\n  USER_LOGIN: 'USER_LOGIN',\n  USER_LOGOUT: 'USER_LOGOUT'\n}\n\nexport const HistoryTypeList = [\n  {name: HistoryType.DIVIDEND_GOAL, value: '목표 배당금 설정'},\n\n  {name: HistoryType.STOCK_SYNC, value: '주식 동기화'},\n  {name: HistoryType.STOCK_ADD, value: '주식 추가'},\n  {name: HistoryType.STOCK_MODIFY, value: '주식 수정'},\n  {name: HistoryType.STOCK_DELETE, value: '주식 삭제'},\n\n  {name: HistoryType.QUOTE_SEE, value: '주식 시세 보기'},\n  {name: HistoryType.GUIDE_SEE, value: '가이드 보기 클릭'},\n  {name: HistoryType.NOTICE_SEE, value: '공지사항 보기 클릭'},\n\n  {name: HistoryType.USER_LOGIN, value: '로그인'},\n  {name: HistoryType.USER_LOGOUT, value: '로그아웃'}\n]\n\nconst getMap = () => {\n  const map = new Map()\n\n  HistoryTypeList.forEach(history => {\n    map.set(history.name, history.value)\n  })\n\n  return map\n}\n\nexport const HistoryTypeMap = getMap()\n\n","import { HistoryType, HistoryTypeMap } from 'constant/HistoryType'\n\nconst HistoryItem = ({history}) => {\n\n  const dateTimeFormat = new Intl.DateTimeFormat('ko-KR', {year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit'})\n\n  const getColor = () => {\n    switch (history.type) {\n      case HistoryType.USER_LOGIN : {\n        return 'bg-green-200'\n      }\n      case HistoryType.USER_LOGOUT : {\n        return 'bg-red-200'\n      }\n      case HistoryType.STOCK_SYNC : {\n        return 'bg-yellow-200'\n      }\n      case HistoryType.DIVIDEND_GOAL : {\n        return 'bg-blue-200'\n      }\n      default : {\n        return ''\n      }\n    }\n  }\n\n  return (\n    <tr className={ getColor() }>\n      <td>{ HistoryTypeMap.get(history.type) }</td>\n      <td>{ history.ticker }</td>\n      <td>{ history.count }</td>\n      <td>{ history.goal }</td>\n      <td>{ dateTimeFormat.format(history.created_at) }</td>\n    </tr>\n  )\n}\n\nexport default HistoryItem","const StockItem = ({stock}) => {\n\n  return (\n    <tr className={ 'bg-white h-14' }>\n      <td>\n        <img src={ stock.logoUrl } width='50px' height='50px' />\n      </td>\n      <td>{ stock.companyName }</td>\n      <td>{ stock.symbol }</td>\n      <td>{ stock.count }</td>\n    </tr>\n  )\n}\n\nexport default StockItem","import { useEffect, useState } from 'react'\nimport { collection, getDocs, query, where } from 'firebase/firestore'\nimport { firestore } from 'DWFirebase'\nimport StockItem from 'components/StockItem'\n\nconst StockAnalysisWithUser = ({userId}) => {\n\n  const [stockList, setStockList] = useState([])\n\n  useEffect(async () => {\n    const stocksRef = collection(firestore, 'stocks')\n    const stocksQuery = query(stocksRef, where('userId', '==', userId))\n    const stocksSnapshot = await getDocs(stocksQuery)\n    const stocks = stocksSnapshot.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data()\n    }))\n    setStockList(stocks)\n  }, [])\n\n  return (\n    <div\n      style={ {display: 'flex', flexDirection: 'column'} }\n    >\n      <p className={ 'mt-8 text-2xl font-bold' }>Stock Analysis</p>\n      <p className={ 'mt-2' }>\n        { 'total stock cnt : ' + stockList.length}\n      </p>\n\n      <table\n        id='stockTable'\n        className={ 'table-auto w-full border-collapse border border-black mt-8' }\n      >\n        <thead>\n        <tr className={ 'bg-blue-200' }>\n          <th>Logo</th>\n          <th>CompanyName</th>\n          <th>Ticker</th>\n          <th>Count</th>\n        </tr>\n        </thead>\n        <tbody>\n        { stockList.map((stock) => <StockItem stock={ stock } />) }\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default StockAnalysisWithUser","import { useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { collection, getDocs, query, where } from 'firebase/firestore'\nimport { firestore } from 'DWFirebase'\nimport { HistoryTypeList } from 'constant/HistoryType'\nimport HistoryItem from 'components/HistoryItem'\nimport StockAnalysisWithUser from 'components/StockAnalysisWithUser'\n\nconst UserDetailHistory = () => {\n  const location = useLocation()\n\n  const [historyList, setHistoryList] = useState([])\n  const [userId, setUserId] = useState('')\n  const [userName, setUserName] = useState('')\n\n  const [isShowError, setIsShowError] = useState(false)\n\n  useEffect(async () => {\n    try {\n      const stateUserid = location.state.uid\n      const stateUserName = location.state.name\n      setUserId(stateUserid)\n      setUserName(stateUserName)\n\n      const historyRef = collection(firestore, 'history')\n      //const historyQuery = query(historyRef, where('userId', '==', userId, limit(100)))\n      const historyQuery = query(historyRef, where('userId', '==', stateUserid))\n      const historySnapshot = await getDocs(historyQuery)\n      const histories = historySnapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data()\n      }))\n      setHistoryListOrderByCreatedAtDESC(histories)\n      setIsShowError(false)\n    } catch (e) {\n      setIsShowError(true)\n      console.log(e)\n    }\n  }, [])\n\n  const setHistoryListOrderByCreatedAtDESC = (histories) => {\n    const sortingHistoryList = histories.sort(function (a, b) {\n      return b.created_at - a.created_at\n    })\n    setHistoryList(sortingHistoryList)\n  }\n\n  const onSelectType = (event) => {\n    const {target: {value}} = event\n    filterHistoryByType(value)\n  }\n\n  function filterHistoryByType(type) {\n    const table = document.getElementById('historyTable')\n    const trs = table.getElementsByTagName('tr')\n\n    for (let i = 0; i < trs.length; i++) {\n      const tdType = trs[i].getElementsByTagName('td')[0]\n      if (tdType) {\n        const tdTypeText = tdType.textContent || tdType.innerText\n        if (tdTypeText.indexOf(type) > -1) {\n          trs[i].style.display = ''\n        } else {\n          trs[i].style.display = 'none'\n        }\n      }\n    }\n  }\n\n  return (\n    isShowError ?\n    <div>\n      잘못된 경로 입니다.\n    </div> :\n    <div\n      className={ 'px-5 py-5 text-lg' }\n      style={ {display: 'flex', flexDirection: 'column'} }\n    >\n\n      <div className={ 'text-3xl font-bold' }>\n        { userName }\n      </div>\n\n      <StockAnalysisWithUser userId={ userId } />\n\n      <div className={ 'mt-8 font-bold text-2xl' }>History</div>\n\n      <table\n        id='historyTable'\n        className={ 'table-fixed w-full border-collapse border border-black mt-8' }\n      >\n        <thead>\n        <tr className=\"bg-blue-200\">\n          <th>\n            <select\n              style={ {backgroundColor: 'transparent'} }\n              onChange={ onSelectType }\n            >\n              <option value=\"\" selected=\"selected\">Type</option>\n              { HistoryTypeList.map((type) => <option value={ type.value }>{ type.value }</option>) }\n            </select>\n          </th>\n          <th>Ticker</th>\n          <th>Count</th>\n          <th>Goal</th>\n          <th>CreatedAt</th>\n        </tr>\n        </thead>\n        <tbody>\n        { historyList.map((history) => <HistoryItem history={ history } />) }\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default UserDetailHistory","const RankingItem = ({ranking}) => {\n  return (\n    <tr className={ 'bg-white h-14' }>\n      <td>\n        <img src={ ranking.logoUrl } width='50px' height='50px' />\n      </td>\n      <td>{ ranking.companyName }</td>\n      <td>{ ranking.symbol }</td>\n      <td>{ ranking.count }</td>\n      <td>{ ranking.userNumber }</td>\n    </tr>\n  )\n}\n\nexport default RankingItem\n","export const checkAdmin = (email) => {\n  if (email === 'dlwls5201@gmail.com') {\n    return true\n  }\n\n  if (email === 'baedanggum@gmail.com') {\n    return true\n  }\n\n  if (email === 'key940752@gmail.com') {\n    return true\n  }\n\n  return false\n}\n","import React, { useEffect, useState } from 'react'\nimport { collection, getDocs } from 'firebase/firestore'\nimport { firestore } from 'DWFirebase'\nimport OrderBy from 'constant/OrderBy'\nimport RankingItem from 'components/RankingItem'\nimport { checkAdmin } from 'constant/CheckAdmin'\n\nconst StockRanking = ({userObj}) => {\n\n  const [rankingList, setRankingList] = useState([])\n  const [countOrder, setCountOrder] = useState(OrderBy.ASC)\n  const [userNumberOrder, setUserNumberOrder] = useState(OrderBy.ASC)\n  const [focusOrder, setFocusOrder] = useState('')\n  const [isCachingData, setIsCachingData] = useState('')\n\n  const [isShowError, setIsShowError] = useState(false)\n\n  useEffect(() => {\n    if (checkAdmin(userObj.email)) {\n      setIsShowError(false)\n\n      const currentTime = Date.now()\n      const localStocks = localStorage.getItem('stocks')\n      const localCacheTime = localStorage.getItem('stocks_time')\n\n      const OneDayUnixTime = 86400000\n      if (currentTime - JSON.parse(localCacheTime) < OneDayUnixTime && localStocks != null) {\n        const list = JSON.parse(localStocks)\n        processingData(list)\n        setIsCachingData('[Cache]')\n      } else {\n        setIsCachingData('')\n        loadRanking().then(r => console.log(r))\n      }\n    } else {\n      setIsShowError(true)\n    }\n  }, [])\n\n  const loadRanking = async () => {\n    const stocksSnapshot = await getDocs(collection(firestore, 'stocks'))\n    const stocks = stocksSnapshot.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data()\n    }))\n\n    processingData(stocks)\n\n    localStorage.setItem('stocks', JSON.stringify(stocks))\n\n    const currentTime = Date.now()\n    localStorage.setItem('stocks_time', JSON.stringify(currentTime))\n  }\n\n  const processingData = (stocks) => {\n    const tempMap = new Map()\n    stocks.forEach(stock => {\n      let item = tempMap.get(stock.symbol)\n      if (item) {\n        item.count += parseFloat(stock.count)\n        item.userNumber += 1\n      } else {\n        item = {\n          'symbol': stock.symbol,\n          'count': parseFloat(stock.count),\n          'userNumber': 1,\n          'companyName': stock.companyName,\n          'logoUrl': stock.logoUrl\n        }\n      }\n      tempMap.set(stock.symbol, item)\n    })\n\n    const tempList = []\n    tempMap.forEach((value, key) => tempList.push(value))\n    setRankingList(tempList)\n  }\n\n  const onClickChangeCountOrderBy = () => {\n    setFocusOrder('count')\n\n    if (countOrder === OrderBy.ASC) {\n      setCountOrder(OrderBy.DESC)\n      const list = rankingList.sort(function (a, b) {\n        return b.count - a.count\n      })\n      setRankingList(list)\n    } else {\n      setCountOrder(OrderBy.ASC)\n      const list = rankingList.sort(function (a, b) {\n        return a.count - b.count\n      })\n      setRankingList(list)\n    }\n  }\n\n  const onClickChangeUserNumberOrderBy = () => {\n    setFocusOrder('userNumber')\n\n    if (userNumberOrder === OrderBy.ASC) {\n      setUserNumberOrder(OrderBy.DESC)\n      const list = rankingList.sort(function (a, b) {\n        return b.userNumber - a.userNumber\n      })\n      setRankingList(list)\n    } else {\n      setUserNumberOrder(OrderBy.ASC)\n      const list = rankingList.sort(function (a, b) {\n        return a.userNumber - b.userNumber\n      })\n      setRankingList(list)\n    }\n  }\n\n  return (\n    isShowError ?\n    <div>\n      잘못된 경로 입니다.\n    </div> :\n    <div\n      className={ 'px-4 py-4' }\n      style={ {display: 'flex', flexDirection: 'column'} }\n    >\n      <p className={ 'mt-8 text-2xl font-bold' }>{ 'Stock Ranking 👑 ' + isCachingData }</p>\n\n      <p\n        className={ 'mt-8 text-gray-600' }\n      >\n        모든 유저의 주식 총 갯수 : <b>Count</b> <br />\n        해당 주식을 추가한 모든 유저들의 수 : <b>UserNumber</b>\n      </p>\n\n      <table\n        id='rankingTable'\n        className={ 'table-auto w-full border-collapse border border-black mt-4' }\n      >\n        <thead>\n        <tr className={ 'bg-blue-200' }>\n          <th>Logo</th>\n          <th>CompanyName</th>\n          <th>Ticker</th>\n          <th\n            style={ {cursor: 'pointer'} }\n            className={ (focusOrder === 'count') ? 'bg-yellow-200' : '' }\n            onClick={ onClickChangeCountOrderBy }\n          >\n            { 'Count ' + ((countOrder === OrderBy.ASC) ? '↓' : '↑') }\n          </th>\n          <th\n            style={ {cursor: 'pointer'} }\n            className={ (focusOrder === 'userNumber') ? 'bg-yellow-200' : '' }\n            onClick={ onClickChangeUserNumberOrderBy }\n          >\n            { 'UserNumber ' + ((userNumberOrder === OrderBy.ASC) ? '↓' : '↑') }\n          </th>\n        </tr>\n        </thead>\n        <tbody>\n        { rankingList.map((ranking) => <RankingItem ranking={ ranking } />) }\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default StockRanking","import { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport Auth from 'routes/Auth'\nimport UserHistory from 'routes/UserHistory'\nimport UserDetailHistory from 'routes/UserDetailHistory'\nimport StockRanking from 'routes/StockRanking'\n\nconst AppRouter = ({isAdmin, userObj}) => {\n  return <Router>\n    { isAdmin ? (\n      <Switch>\n        <Route exact path=\"/\">\n          <UserHistory />\n        </Route>\n        <Route exact path=\"/user/detail\">\n          <UserDetailHistory />\n        </Route>\n        <Route exact path=\"/stock/ranking\">\n          <StockRanking userObj={ userObj } />\n        </Route>\n        <Route render={ () => <div>Page Not Found</div> } />\n      </Switch>\n    ) : (\n        <Switch>\n          <Route exact path=\"/\">\n            <Auth userObj={ userObj } />\n          </Route>\n          <Route render={ () => <div>Page Not Found</div> } />\n        </Switch>\n      )\n    }\n  </Router>\n}\n\nexport default AppRouter\n","import AppRouter from 'components/Router'\nimport { useEffect, useState } from 'react'\nimport { getAuth, onAuthStateChanged } from 'firebase/auth'\nimport { checkAdmin } from 'constant/CheckAdmin'\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [isAdmin, setIsAdmin] = useState(false)\n  const [userObj, setUserObj] = useState(null)\n\n  useEffect(() => {\n    const auth = getAuth()\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setUserObj(user)\n        checkAdminUser(user)\n      } else {\n        setUserObj(null)\n      }\n      setInit(true)\n    })\n  }, [])\n\n  const checkAdminUser = (user) => {\n    if (checkAdmin(user.email)) {\n      setIsAdmin(true)\n    } else {\n      setIsAdmin(false)\n    }\n  }\n\n  return (\n    <div>\n      { init ? <AppRouter isAdmin={ isAdmin } userObj={ userObj } /> : 'Initializing...' }\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from 'components/App'\nimport 'index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}